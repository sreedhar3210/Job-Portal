{"ast":null,"code":"var _jsxFileName = \"/Users/sreedhar.palampalli/Desktop/Projects/Job-Portal/frontend/src/components/CompanySignup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanySignup() {\n  _s();\n  const [companyName, setCompanyName] = useState(\"\");\n  const [industryTypeOptions, setIndustryTypeOptions] = useState([]);\n  const [selectedIndustryType, setSelectedIndustryType] = useState(\"\");\n  const [companyURL, setCompanyURL] = useState(\"\");\n  const [companySizeOptions, setCompanySizeOptions] = useState([]);\n  const [selectedCompanySize, setSelectedCompanySize] = useState(\"\");\n  const [companyDescription, setCompanyDescription] = useState(\"\");\n  const handleCompanyNameChange = event => setCompanyName(event.target.value);\n  const handleIndustryTypeChange = event => setSelectedIndustryType(event.target.value);\n  const handleCompanyURLChange = event => setCompanyURL(event.target.value);\n  const handleCompanySizeChange = event => setSelectedCompanySize(event.target.value);\n  const handleCompanyDescriptionChange = event => setCompanyDescription(event.target.value);\n  useEffect(() => {\n    const getSelectOptions = async () => {\n      let arrayParams = ['Industry Type', 'Company Size'];\n      let options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          selectOptionParams: arrayParams\n        })\n      };\n      const response = await fetch('http://localhost:8080/api/get-select-options', options);\n      const responseText = await response.json();\n      console.log('>>>> response = ', response);\n      console.log('>>>> responseText = ', responseText);\n      if (response.status === 200) {\n        if (responseText.status === \"OK\") {} else {\n          alert('Some error in the page, please refresh the page');\n        }\n      } else {\n        alert('An error occured could you please refresh the page');\n      }\n    };\n    getSelectOptions();\n    // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: companyName,\n      onChange: handleCompanyNameChange,\n      children: \"CompanyName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      options: industryTypeOptions,\n      value: selectedIndustryType,\n      onChange: handleIndustryTypeChange,\n      isClearable: true,\n      children: \"Industry Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      children: [\"type=\\\"text\\\" value=\", companyURL, \"onChange=\", handleCompanyURLChange, \"> CompanyURL\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [\"options=\", companySizeOptions, \"value=\", selectedCompanySize, \"onChange=\", handleCompanySizeChange, \"isClearable> Company Size\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      children: [\"type=\\\"text\\\" value=\", companyDescription, \"onChange=\", handleCompanyDescription, \"> Company Description\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n}\n_s(CompanySignup, \"UaMfLfCsYrnOfBzVGtoiSOXIb7Y=\");\n_c = CompanySignup;\nexport default CompanySignup;\nvar _c;\n$RefreshReg$(_c, \"CompanySignup\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","CompanySignup","_s","companyName","setCompanyName","industryTypeOptions","setIndustryTypeOptions","selectedIndustryType","setSelectedIndustryType","companyURL","setCompanyURL","companySizeOptions","setCompanySizeOptions","selectedCompanySize","setSelectedCompanySize","companyDescription","setCompanyDescription","handleCompanyNameChange","event","target","value","handleIndustryTypeChange","handleCompanyURLChange","handleCompanySizeChange","handleCompanyDescriptionChange","getSelectOptions","arrayParams","options","method","headers","body","JSON","stringify","selectOptionParams","response","fetch","responseText","json","console","log","status","alert","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","isClearable","handleCompanyDescription","_c","$RefreshReg$"],"sources":["/Users/sreedhar.palampalli/Desktop/Projects/Job-Portal/frontend/src/components/CompanySignup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CompanySignup() {\n\n\tconst [companyName, setCompanyName] = useState(\"\");\n\tconst [industryTypeOptions, setIndustryTypeOptions] = useState([]);\n\tconst [selectedIndustryType, setSelectedIndustryType] = useState(\"\");\n\tconst [companyURL, setCompanyURL] = useState(\"\");\n\tconst [companySizeOptions, setCompanySizeOptions] = useState([]);\n\tconst [selectedCompanySize, setSelectedCompanySize] = useState(\"\");\n\tconst [companyDescription, setCompanyDescription] = useState(\"\");\n\n\tconst handleCompanyNameChange = (event) => setCompanyName(event.target.value);\n\tconst handleIndustryTypeChange = (event) => setSelectedIndustryType(event.target.value);\n\tconst handleCompanyURLChange = (event) => setCompanyURL(event.target.value);\n\tconst handleCompanySizeChange = (event) => setSelectedCompanySize(event.target.value);\n\tconst handleCompanyDescriptionChange = (event) => setCompanyDescription(event.target.value);\n\t\n\tuseEffect(() => {\n\t\tconst getSelectOptions = async () => {\n\t\t\tlet arrayParams = ['Industry Type', 'Company Size'];\n\t\t\tlet options = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tselectOptionParams: arrayParams\n\t\t\t\t\t})\n\t\t\t\t};\n\n\t\t\t\tconst response = await fetch('http://localhost:8080/api/get-select-options', options);\n\t\t\t\tconst responseText = await response.json();\n\t\t\t\tconsole.log('>>>> response = ', response);\n\t\t\t\tconsole.log('>>>> responseText = ', responseText);\n\t\t\t\tif(response.status === 200){\n\t\t\t\t\tif(responseText.status === \"OK\"){\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\talert('Some error in the page, please refresh the page');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\talert('An error occured could you please refresh the page');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tgetSelectOptions();\n\t\t// eslint-disable-next-line\n\t}, []);\n\treturn (\n\n\t\t<div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={companyName}\n\t\t\t\tonChange={handleCompanyNameChange}>\n\t\t\t\t\tCompanyName\n\t\t\t</input>\n\t\t\t<select\n\t\t\t\toptions={industryTypeOptions}\n\t\t\t\tvalue={selectedIndustryType}\n\t\t\t\tonChange={handleIndustryTypeChange}\n\t\t\t\tisClearable>\n\t\t\t\t\tIndustry Type\n\t\t\t</select>\n\t\t\t<input>\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={companyURL}\n\t\t\t\tonChange={handleCompanyURLChange}>\n\t\t\t\t\tCompanyURL\n\t\t\t</input>\n\t\t\t<select>\n\t\t\t\toptions={companySizeOptions}\n\t\t\t\tvalue={selectedCompanySize}\n\t\t\t\tonChange={handleCompanySizeChange}\n\t\t\t\tisClearable>\n\t\t\t\t\tCompany Size\n\t\t\t</select>\n\t\t\t<input>\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={companyDescription}\n\t\t\t\tonChange={handleCompanyDescription}>\n\t\t\t\t\tCompany Description\n\t\t\t</input>\n\t\t</div>\n\n\t);\n\n}\n\nexport default CompanySignup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}