{"ast":null,"code":"var _jsxFileName = \"/Users/sreedhar.palampalli/Desktop/Projects/Job-Portal/frontend/src/components/Signin.jsx\";\n// import React, { useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signin() {\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // const handleEmailOnChange = (event) => setEmail(event.target.value);\n  // const handlePasswordOnChange = (event) => setPassword(event.target.value);\n\n  // const handleDetailsSubmit = () => {\n  // \tconsole.log('>>> email is ' + email + ' password is ' + password);\n  // \tsetIsSubmitted(true);\n  // }\n\n  // useEffect(() => {\n  // \tif (isSubmitted) {\n  // \t\tconst verifyUserCredentials = async () => {\n  // \t\t\tlet options = {\n  // \t\t\t\tmethod: 'POST',\n  // \t\t\t\theaders: {\n  // \t\t\t\t\t'Content-Type': 'application/json'\n  // \t\t\t\t},\n  // \t\t\t\tbody: JSON.stringify({\n  // \t\t\t\t\temail: email,\n  // \t\t\t\t\tpassword: password\n  // \t\t\t\t})\n  // \t\t\t};\n\n  // \t\t\tawait fetch('http://localhost:8080/api/verify-user-credentials', options);\n  // \t\t};\n\n  // \t\tinsertUser();\n  // \t}\n  // \t// eslint-disable-next-line\n  // }, [isSubmitted]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"From Signin page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Signin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sreedhar.palampalli/Desktop/Projects/Job-Portal/frontend/src/components/Signin.jsx"],"sourcesContent":["// import React, { useState } from 'react';\nimport React from 'react';\n\nfunction Signin(){\n\n\t// const [email, setEmail] = useState('');\n\t// const [password, setPassword] = useState('');\n\t// const [isSubmitted, setIsSubmitted] = useState(false);\n\n\t// const handleEmailOnChange = (event) => setEmail(event.target.value);\n\t// const handlePasswordOnChange = (event) => setPassword(event.target.value);\n\n\t// const handleDetailsSubmit = () => {\n\t// \tconsole.log('>>> email is ' + email + ' password is ' + password);\n\t// \tsetIsSubmitted(true);\n\t// }\n\n\t// useEffect(() => {\n\t// \tif (isSubmitted) {\n\t// \t\tconst verifyUserCredentials = async () => {\n\t// \t\t\tlet options = {\n\t// \t\t\t\tmethod: 'POST',\n\t// \t\t\t\theaders: {\n\t// \t\t\t\t\t'Content-Type': 'application/json'\n\t// \t\t\t\t},\n\t// \t\t\t\tbody: JSON.stringify({\n\t// \t\t\t\t\temail: email,\n\t// \t\t\t\t\tpassword: password\n\t// \t\t\t\t})\n\t// \t\t\t};\n\n\t// \t\t\tawait fetch('http://localhost:8080/api/verify-user-credentials', options);\n\t// \t\t};\n\n\t// \t\tinsertUser();\n\t// \t}\n\t// \t// eslint-disable-next-line\n\t// }, [isSubmitted]);\n\n\treturn(\n\t\t<div>\n\t\t\t<p>From Signin page</p>\n\t\t\t{/*<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tnChange={handleEmailOnChange}\n\t\t\t\tvalue={email}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tonChange={handlePasswordOnChange}\n\t\t\t\tvalue={password}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tonClick={handleOnSubmit}\n\t\t\t/>*/}\n\t\t</div>\n\t);\n}\n\nexport default Signin;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAE;EAEhB;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACCD,OAAA;IAAAE,QAAA,eACCF,OAAA;MAAAE,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAenB,CAAC;AAER;AAACC,EAAA,GAvDQN,MAAM;AAyDf,eAAeA,MAAM;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}